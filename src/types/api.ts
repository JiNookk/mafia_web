/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/rooms": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getList"];
        put?: never;
        post: operations["create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rooms/{roomId}/leave": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["leave"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rooms/{roomId}/join": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["join"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rooms/{roomId}/games/start": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["startGame"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rooms/{roomId}/chat": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getChatHistory"];
        put?: never;
        post: operations["sendMessage"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{gameId}/next-phase": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["nextPhase"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{gameId}/chat/{chatType}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getChatHistory_1"];
        put?: never;
        post: operations["sendChat"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{gameId}/actions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["registerAction"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["signup"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/current": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["checkSession"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["welcome"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rooms/{roomId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getDetail"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{gameId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getGameState"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{gameId}/votes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getVoteStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{gameId}/players": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getPlayers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{gameId}/my-role": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getMyRole"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        CreateRoomDto: {
            username: string;
            roomName: string;
        };
        RoomDetailResponse: {
            id?: string;
            name?: string;
            members?: components["schemas"]["RoomMemberResponse"][];
            /** Format: int32 */
            currentPlayers?: number;
            /** Format: int32 */
            maxPlayers?: number;
        };
        RoomMemberResponse: {
            userId?: string;
            nickname?: string;
            /** @enum {string} */
            role?: "HOST" | "PARTICIPANT";
        };
        LeaveRoomDto: {
            userId: string;
        };
        JoinRoomDto: {
            username: string;
            roomId: string;
        };
        GameStateResponse: {
            gameId?: string;
            currentPhase?: string;
            /** Format: int32 */
            dayCount?: number;
            /** Format: date-time */
            phaseStartTime?: string;
            /** Format: int32 */
            phaseDurationSeconds?: number;
            /** Format: int64 */
            remainingSeconds?: number;
            winnerTeam?: string;
            /** Format: date-time */
            finishedAt?: string;
        };
        SendChatDto: {
            userId: string;
            /** @enum {string} */
            chatType: "WAITING_ROOM" | "GAME_ALL" | "GAME_MAFIA" | "GAME_DEAD";
            message: string;
        };
        ChatMessageDto: {
            /** Format: int64 */
            id?: number;
            contextId?: string;
            userId?: string;
            nickname?: string;
            /** @enum {string} */
            chatType?: "WAITING_ROOM" | "GAME_ALL" | "GAME_MAFIA" | "GAME_DEAD";
            message?: string;
            /** Format: date-time */
            timestamp?: string;
        };
        NextPhaseResponse: {
            currentPhase?: string;
            /** Format: int32 */
            dayCount?: number;
            /** Format: date-time */
            phaseStartTime?: string;
            /** Format: int32 */
            phaseDurationSeconds?: number;
            lastPhaseResult?: components["schemas"]["PhaseResult"];
        };
        PhaseResult: {
            deaths?: string[];
            executedUserId?: string;
            winnerTeam?: string;
        };
        RegisterActionDto: {
            type: string;
            targetUserId: string;
            actorUserId?: string;
        };
        SignupDto: {
            nickname?: string;
        };
        CurrentRoomDto: {
            roomId?: string;
            gameId?: string;
        };
        SessionResponseDto: {
            userId?: string;
            nickname?: string;
            currentRoom?: components["schemas"]["CurrentRoomDto"];
        };
        SessionRequestDto: {
            userId: string;
        };
        GetRoomListQueryDto: {
            /** Format: int32 */
            page?: number;
            /** Format: int32 */
            limit?: number;
            /** @enum {string} */
            order?: "ASC" | "DESC";
            /** @enum {string} */
            sort?: "Id";
        };
        OffsetPaginationDtoRoomListResponse: {
            list?: components["schemas"]["RoomListResponse"][];
            meta?: components["schemas"]["OffsetPaginationMetadata"];
        };
        OffsetPaginationMetadata: {
            /** Format: int32 */
            page?: number;
            /** Format: int32 */
            totalPage?: number;
            /** Format: int32 */
            limit?: number;
        };
        RoomListResponse: {
            id?: string;
            name?: string;
            /** Format: int32 */
            currentPlayers?: number;
            /** Format: int32 */
            maxPlayers?: number;
            /** @enum {string} */
            status?: "AVAILABLE" | "STARTED" | "FULL";
        };
        VoteInfo: {
            voterUserId?: string;
            targetUserId?: string;
        };
        VoteStatusResponse: {
            votes?: components["schemas"]["VoteInfo"][];
            voteCount?: {
                [key: string]: number;
            };
        };
        GamePlayerResponse: {
            userId?: string;
            username?: string;
            /** Format: int32 */
            position?: number;
            isAlive?: boolean;
            /** Format: date-time */
            diedAt?: string;
        };
        GamePlayersResponse: {
            players?: components["schemas"]["GamePlayerResponse"][];
        };
        MyRoleResponse: {
            role?: string;
            isAlive?: boolean;
            /** Format: int32 */
            position?: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getList: {
        parameters: {
            query: {
                query: components["schemas"]["GetRoomListQueryDto"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["OffsetPaginationDtoRoomListResponse"];
                };
            };
        };
    };
    create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateRoomDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["RoomDetailResponse"];
                };
            };
        };
    };
    leave: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roomId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LeaveRoomDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    join: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roomId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["JoinRoomDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["RoomDetailResponse"];
                };
            };
        };
    };
    startGame: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roomId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GameStateResponse"];
                };
            };
        };
    };
    getChatHistory: {
        parameters: {
            query: {
                userId: string;
                limit?: number;
            };
            header?: never;
            path: {
                roomId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ChatMessageDto"][];
                };
            };
        };
    };
    sendMessage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roomId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SendChatDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ChatMessageDto"];
                };
            };
        };
    };
    nextPhase: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                gameId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["NextPhaseResponse"];
                };
            };
        };
    };
    getChatHistory_1: {
        parameters: {
            query: {
                userId: string;
                limit?: number;
            };
            header?: never;
            path: {
                gameId: string;
                chatType: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ChatMessageDto"][];
                };
            };
        };
    };
    sendChat: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                gameId: string;
                chatType: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SendChatDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ChatMessageDto"];
                };
            };
        };
    };
    registerAction: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                gameId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RegisterActionDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    signup: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SignupDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SessionResponseDto"];
                };
            };
        };
    };
    checkSession: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SessionRequestDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SessionResponseDto"];
                };
            };
        };
    };
    welcome: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    getDetail: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roomId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["RoomDetailResponse"];
                };
            };
        };
    };
    getGameState: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                gameId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GameStateResponse"];
                };
            };
        };
    };
    getVoteStatus: {
        parameters: {
            query: {
                dayCount: number;
            };
            header?: never;
            path: {
                gameId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["VoteStatusResponse"];
                };
            };
        };
    };
    getPlayers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                gameId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GamePlayersResponse"];
                };
            };
        };
    };
    getMyRole: {
        parameters: {
            query: {
                userId: string;
            };
            header?: never;
            path: {
                gameId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["MyRoleResponse"];
                };
            };
        };
    };
}
